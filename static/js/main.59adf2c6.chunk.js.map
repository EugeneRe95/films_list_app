{"version":3,"sources":["redux/types.js","common/TextField.js","common/Select.js","components/AddMovieBar.js","redux/actions.js","components/Header.js","components/MovieItem.js","components/MovieList.js","components/MainPage.js","App.js","redux/rootReducer.js","index.js"],"names":["ADD_MOVIE","LOAD_MOVIES","DELETE_MOVIE","SEARCH_BY_MOVIE","SEARCH_BY_ACTORS","SORT_MOVIES","TOGGLE_SPINNER","TextField","className","value","onChange","label","InputProps","name","error","helperText","props","variant","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","Select","data","classes","id","uuidv4","FormControl","InputLabel","labelId","MenuItem","map","item","title","mapDispatchToProps","addMovie","payload","type","connect","state","movies","movieBar","setMovieBar","useState","movie","setMovie","year","setYear","actors","setActors","format","setFormat","movieExist","setError","helperTextMovie","setHelperTextMovie","e","target","Button","color","onClick","filter","toLowerCase","length","release_date","stars","mapDispatch","filterByMovie","filterByActors","sortMovies","actorsFilter","moviesFilter","filterByMovies","endAdornment","InputAdornment","position","IconButton","aria-label","fontSize","deleteMovie","info","setInfo","indexOf","loadMovies","dispatch","axios","get","then","res","catch","console","log","spinner","useEffect","LinearProgress","App","basename","exact","path","component","MainPage","initialState","store","createStore","action","concat","sort","a","b","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"2MAAaA,EAAY,mBACZC,EAAc,qBACdC,EAAe,sBACfC,EAAkB,yBAClBC,EAAmB,0BACnBC,EAAc,qBACdC,EAAiB,yB,6DCqBfC,MAxBf,YAUI,IATAC,EASD,EATCA,UACAC,EAQD,EARCA,MACAC,EAOD,EAPCA,SACAC,EAMD,EANCA,MACAC,EAKD,EALCA,WACAC,EAID,EAJCA,KACAC,EAGD,EAHCA,MACAC,EAED,EAFCA,WACGC,EACJ,iGACC,OAAQ,cAAC,IAAD,yBACJC,QAAQ,YACJD,GAFA,IAGJL,MAAOA,EACPE,KAAMA,EACNL,UAAWA,EACXC,MAAOA,EACPC,SAAUA,EACVI,MAAOA,EACPC,WAAYD,GAASC,EACrBH,WAAYA,M,oIChBdM,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,YAAa,CACXC,OAAQF,EAAMG,QAAQ,GACtBC,SAAU,SA2BDC,MAvBf,YAAuD,IAAtChB,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAUG,EAAoB,EAApBA,KAAMF,EAAc,EAAdA,MAAOe,EAAO,EAAPA,KACrCC,EAAUT,IACVU,EAAGC,cACT,OACI,eAACC,EAAA,EAAD,CAAab,QAAQ,WAAWT,UAAWmB,EAAQN,YAAnD,UACE,cAACU,EAAA,EAAD,CAAYH,GAAIA,EAAhB,SAAqBjB,IACrB,eAAC,IAAD,CACEF,MAAOA,EACPuB,QAASJ,EACTjB,MAAOA,EACPE,KAAMA,EACNH,SAAUA,EALZ,UAME,cAACuB,EAAA,EAAD,CAAUxB,MAAM,GAAhB,SACE,wCAEDiB,GAAQA,EAAKQ,KAAI,SAAAC,GAChB,OAAO,cAACF,EAAA,EAAD,CAAyBxB,MAAO0B,EAAK1B,MAArC,SAA6C0B,EAAKC,OAAnCP,yBCsEpC,IAIMQ,EAAqB,CACvBC,SChFG,SAAkBC,GACrB,MAAO,CAACC,KAAMxC,EAAWuC,aDkFdE,eARS,SAAAC,GACpB,MAAO,CAACC,OAAQD,EAAMC,UAOcN,EAAzBI,EArGf,YAAiE,IAA3CG,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,YAAaP,EAAmB,EAAnBA,SAAUK,EAAS,EAATA,OAAS,EAE5CG,mBAAS,IAFmC,mBACrDC,EADqD,KAExDC,EAFwD,OAI7CF,mBAAS,IAJoC,mBAGrDG,EAHqD,KAIxDC,EAJwD,OAM3CJ,mBAAS,IANkC,mBAKrDK,EALqD,KAMxDC,EANwD,OAQ3CN,mBAAS,IARkC,mBAOrDO,EAPqD,KAQxDC,EARwD,OAU5CR,oBAAS,GAVmC,mBASrDS,EATqD,KAUxDC,EAVwD,OAYlCV,mBAAS,IAZyB,mBAWrDW,EAXqD,KAYxDC,EAZwD,KAmC5D,OACI,sBACI9B,GAAG,gBACHpB,UAAWoC,EACT,SACA,GAJN,UAKI,cAAC,EAAD,CACIpC,UAAU,aACVG,MAAM,aACNE,KAAK,QACLC,MAAOyC,EACPxC,WAAY0C,EACZhD,MAAOsC,EACPrC,SAAU,SAACiD,GAAD,OAAOX,EAASW,EAAEC,OAAOnD,QACnCQ,QAAQ,aACZ,cAAC,EAAD,CACIT,UAAU,aACVG,MAAM,OACNE,KAAK,OACLJ,MAAOwC,EACPvC,SAAU,SAACiD,GAAD,OAAOT,EAAQS,EAAEC,OAAOnD,UACtC,cAAC,EAAD,CACID,UAAU,aACVG,MAAM,SACNE,KAAK,SACLJ,MAAO0C,EACPzC,SAAU,SAACiD,GAAD,OAAOP,EAAUO,EAAEC,OAAOnD,QACpCQ,QAAQ,aACZ,cAAC,EAAD,CACIR,MAAO4C,EACP1C,MAAM,SACNE,KAAK,SACLa,KAAM,CACN,CACIU,MAAO,MACP3B,MAAO,OACR,CACC2B,MAAO,MACP3B,MAAO,OACR,CACC2B,MAAO,UACP3B,MAAO,YAGXC,SAAU,SAACiD,GAAD,OAAOL,EAAUK,EAAEC,OAAOnD,UACxC,sBAAKD,UAAU,eAAf,UACI,cAACqD,EAAA,EAAD,CACI5C,QAAQ,YACR6C,MAAM,YACNC,QAAS,WACTlB,GAAY,IAJhB,oBAMA,cAACgB,EAAA,EAAD,CAAQ5C,QAAQ,YAAY6C,MAAM,UAAUC,QAzExD,WAC2F,IAAnFpB,EAAOqB,QAAO,SAAA7B,GAAI,OAAIA,EAAKC,MAAM6B,gBAAkBlB,EAAMkB,iBAAeC,QAA0B,KAAVnB,GACxFS,GAAS,GACTlB,EAAS,CAACF,MAAOW,EAAOoB,aAAclB,EAAMmB,MAAOjB,EAAQE,OAAQA,IACnER,GAAY,GAWhBG,EAAS,IACTE,EAAQ,IACRE,EAAU,IACVE,EAAU,MAXNE,GAAS,GACTE,EAA6B,KAAVX,EACb,yBACA,yCA+DF,8BEpChB,IAAMsB,EAAc,CAChBC,cDtBG,SAAuB/B,GAC1B,MAAO,CAACC,KAAMrC,EAAiBoC,YCsB/BgC,eDpBG,SAAwBhC,GAC3B,MAAO,CAACC,KAAMpC,EAAkBmC,YCoBhCiC,WD5BG,WACH,MAAO,CAAChC,KAAMnC,KCkCHoC,eAJE,SAAAC,GACb,MAAO,CAAC+B,aAAc/B,EAAM6B,eAAgBG,aAAchC,EAAMiC,kBAGnCN,EAAlB5B,EAzDf,YAA0F,IAAzE8B,EAAwE,EAAxEA,eAAgBD,EAAwD,EAAxDA,cAAeG,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,aAAcF,EAAa,EAAbA,WAAa,EAElE1B,oBAAS,GAFyD,mBAC9EF,EAD8E,KAEjFC,EAFiF,KAIrF,OACI,mCACI,cAAC,EAAD,CACIrC,UAAU,aACVG,MAAM,QACNF,MAAOgE,EACP7D,WAAY,CACZgE,aAAc,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SAA+B,cAAC,IAAD,CAAYhB,MAAM,gBAE/DpD,SAAU,SAACiD,GACXY,EAAeZ,EAAEC,OAAOnD,UAE5B,cAAC,EAAD,CACID,UAAU,aACVG,MAAM,QACNF,MAAOiE,EACP9D,WAAY,CACZgE,aAAc,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SAA+B,cAAC,IAAD,CAAYhB,MAAM,gBAE/DpD,SAAU,SAACiD,GACXW,EAAcX,EAAEC,OAAOnD,UAE3B,cAACsE,EAAA,EAAD,CACIC,aAAW,OACX5C,MAAM,mBACN2B,QAAS,WACTS,KAJJ,SAMI,cAAC,IAAD,CAAiBV,MAAM,cAE3B,cAACiB,EAAA,EAAD,CACIC,aAAW,YACX5C,MAAM,YACN2B,QAAS,WACTlB,GAAY,IAJhB,SAMI,cAAC,IAAD,CAAeiB,MAAM,UAAUmB,SAAS,YAE5C,cAAC,EAAD,CAAarC,SAAUA,EAAUC,YAAaA,U,kCC7CpD3B,EAAYC,aAAW,iBAAO,CAClCG,OAAQ,CACNA,OAAQ,WAuDZ,IAAM+C,EAAc,CAClBa,YFrCK,SAAqB3C,GACxB,MAAO,CAACC,KAAMtC,EAAcqC,aEuCjBE,cAAQ,KAAM4B,EAAd5B,EAvDf,YAAuE,IAAnDL,EAAkD,EAAlDA,MAAOiB,EAA2C,EAA3CA,OAAQc,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,MAAOc,EAAc,EAAdA,YAChDvD,EAAUT,IADoD,EAG5C4B,oBAAS,GAHmC,mBAG7DqC,EAH6D,KAGvDC,EAHuD,KAKpE,OACE,sBAAK5E,UAAU,aAAf,UACE,sBAAKA,UAAU,UAAf,UACE,6BAAK4B,IACL,sBAAK5B,UAAU,MAAf,UACE,cAACuE,EAAA,EAAD,CACEC,aAAW,WACXxE,UAAWmB,EAAQL,OACnBc,MAAM,gBACN2B,QAAS,WACTqB,GAASD,IALX,SAOE,cAAC,IAAD,CACErB,MAAM,UACNtD,UAAW,iBAAmB2E,EAC5B,SACA,QAEN,cAACJ,EAAA,EAAD,CACEC,aAAW,SACX5C,MAAM,eACN5B,UAAWmB,EAAQL,OACnByC,QAAS,WACTmB,EAAY9C,IALd,SAOE,cAAC,IAAD,CAAY0B,MAAM,sBAIxB,sBAAKtD,UAAW,oBAAsB2E,EAClC,SACA,IAFJ,UAGE,8BACE,6CACC9B,KACH,8BACE,mDACCc,KACH,8BACE,4CACCC,cCzCX,IASe3B,eATE,SAAAC,GACb,MAAO,CACHC,OAAQD,EACHC,OACAqB,QAAO,SAAA7B,GAAI,OAA6E,IAAzEA,EAAKC,MAAM6B,cAAcoB,QAAQ3C,EAAM4B,cAAcL,kBACpED,QAAO,SAAA7B,GAAI,OAA8E,IAA1EA,EAAKiC,MAAMH,cAAcoB,QAAQ3C,EAAM6B,eAAeN,qBAIjD,KAAlBxB,EAvBf,YAA8B,IAAVE,EAAS,EAATA,OAChB,OACI,yBAASf,GAAG,cAAZ,SACKe,EAAOT,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAEhBC,MAAOD,EAAKC,MACZiB,OAAQlB,EAAKkB,OACbc,aAAchC,EAAKgC,aACnBC,MAAOjC,EAAKiC,OAJPvC,uB,SCWrB,IAAMwC,GAAc,CAChBiB,WJVG,WACH,OAAM,SAACC,GACHC,IACKC,IAAI,2DACJC,MAAK,SAAAC,GACFJ,EAAS,CAAC/C,KAAMlC,EAAgBiC,SAAS,IACzCgD,EAAS,CAAC/C,KAAMvC,EAAasC,QAASoD,EAAIjE,UAE7CkE,OAAM,SAACjC,GACJ4B,EAAS,CAAC/C,KAAMlC,EAAgBiC,SAAS,IACzCsD,QAAQC,IAAInC,SIOblB,gBAJE,SAAAC,GACb,MAAO,CAACqD,QAASrD,EAAMqD,WAGM1B,GAAlB5B,EArBf,YAA0C,IAAvB6C,EAAsB,EAAtBA,WAAYS,EAAU,EAAVA,QAI3B,OAHAC,qBAAU,WACNV,MACD,IAEC,0BAAS1D,GAAG,YAAZ,UACI,cAAC,EAAD,IADJ,IACemE,EACL,cAACE,EAAA,EAAD,CAAgBrE,GAAG,oBACnB,cAAC,EAAD,UCHHsE,OARf,WACE,OACE,cAAC,IAAD,CAAQC,SAAS,kBAAjB,SACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,QCIjCC,GAAe,CACjB7D,OAAQ,GACR4B,eAAgB,GAChBD,cAAe,GACfyB,SAAS,G,sBCPPU,GAAQC,cDUC,WAAoD,IAA/BhE,EAA8B,uDAAtB8D,GAAcG,EAAQ,uCAC9D,OAAQA,EAAOnE,MACX,KAAKxC,EACD,OAAO,2BACA0C,GADP,IAEIC,OAAQ,CAACgE,EAAOpE,SAASqE,OAAOlE,EAAMC,UAG9C,KAAKzC,EACD,OAAO,2BACAwC,GADP,IAEIC,OAAQD,EACHC,OACAqB,QAAO,SAAA7B,GAAI,OAAIA,EAAKC,QAAUuE,EAAOpE,aAGlD,KAAKnC,EACD,OAAO,2BACAsC,GADP,IAEI6B,eAAgBoC,EAAOpE,UAG/B,KAAKpC,EACD,OAAO,2BACAuC,GADP,IAEI4B,cAAeqC,EAAOpE,UAG9B,KAAKlC,EACD,OAAO,2BACAqC,GADP,IAEIC,OAAQD,EACHC,OACAkE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE1E,MAAQ2E,EAAE3E,OACrB,EACD,OAGlB,KAAKnC,EACD,OAAO,2BACAyC,GADP,IAEIC,OAAQgE,EAAOpE,UAEvB,KAAKjC,EACD,OAAO,2BACAoC,GADP,IAEIqD,QAASY,EAAOpE,UAGxB,QACI,OAAOG,KC5DoBsE,aAAgBC,OAEvDC,IAASC,OACP,cAAC,IAAD,CAAUV,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFW,SAASC,eAAe,W","file":"static/js/main.59adf2c6.chunk.js","sourcesContent":["export const ADD_MOVIE = \"MOVIES/ADD_MOVIE\"\r\nexport const LOAD_MOVIES = \"MOVIES/LOAD_MOVIES\"\r\nexport const DELETE_MOVIE = \"MOVIES/DELETE_MOVIE\"\r\nexport const SEARCH_BY_MOVIE = \"MOVIES/SEARCH_BY_MOVIE\"\r\nexport const SEARCH_BY_ACTORS = \"MOVIES/SEARCH_BY_ACTORS\"\r\nexport const SORT_MOVIES = \"MOVIES/SORT_MOVIES\"\r\nexport const TOGGLE_SPINNER = \"SPINNER/TOGGLE_SPINNER\"","import React from 'react'\r\nimport {TextField as MaterialTextField} from '@material-ui/core';\r\n\r\nfunction TextField({\r\n    className,\r\n    value,\r\n    onChange,\r\n    label,\r\n    InputProps,\r\n    name,\r\n    error,\r\n    helperText,\r\n    ...props\r\n}) {\r\n    return (<MaterialTextField\r\n        variant=\"outlined\"\r\n        {...props}\r\n        label={label}\r\n        name={name}\r\n        className={className}\r\n        value={value}\r\n        onChange={onChange}\r\n        error={error}\r\n        helperText={error && helperText}\r\n        InputProps={InputProps}/>)\r\n}\r\n\r\nexport default TextField\r\n","import React from 'react'\r\nimport {Select as MaterialSelect} from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    }\r\n  }));\r\n\r\nfunction Select({value, onChange, name, label, data}) { \r\n    const classes = useStyles()\r\n    const id=uuidv4()\r\n    return (\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel id={id}>{label}</InputLabel>\r\n          <MaterialSelect\r\n            value={value}\r\n            labelId={id}\r\n            label={label}\r\n            name={name}\r\n            onChange={onChange}>\r\n            <MenuItem value=\"\">\r\n              <em>None</em>\r\n            </MenuItem>\r\n            {data && data.map(item=>{\r\n              return <MenuItem key={uuidv4()} value={item.value}>{item.title}</MenuItem>\r\n            })}\r\n          </MaterialSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default Select\r\n","import React, {useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '../common/TextField';\r\n\r\nimport {addMovie} from \"../redux/actions\"\r\nimport Select from '../common/Select';\r\n\r\nfunction AddMovieBar({movieBar, setMovieBar, addMovie, movies}) {\r\n    const [movie,\r\n        setMovie] = useState(\"\")\r\n    const [year,\r\n        setYear] = useState(\"\")\r\n    const [actors,\r\n        setActors] = useState(\"\")\r\n    const [format,\r\n        setFormat] = useState(\"\")\r\n    const [movieExist,\r\n        setError] = useState(false)\r\n    const [helperTextMovie,\r\n        setHelperTextMovie] = useState(\"\")\r\n\r\n    function addNewMovie() {\r\n        if (movies.filter(item => item.title.toLowerCase() === movie.toLowerCase()).length === 0 && movie !== \"\") {\r\n            setError(false)\r\n            addMovie({title: movie, release_date: year, stars: actors, format: format})\r\n            setMovieBar(false)\r\n            setFieldToEmpty()\r\n        } else {\r\n            setError(true)\r\n            setHelperTextMovie(movie === \"\"\r\n                ? \"This field is required\"\r\n                : \"Movie with such name already exists\")\r\n        }\r\n    }\r\n\r\n    function setFieldToEmpty() {\r\n        setMovie(\"\")\r\n        setYear(\"\")\r\n        setActors(\"\")\r\n        setFormat(\"\")\r\n    }\r\n\r\n    return (\r\n        <div\r\n            id=\"add-movie-bar\"\r\n            className={movieBar\r\n            ? \"active\"\r\n            : \"\"}>\r\n            <TextField\r\n                className=\"text-field\"\r\n                label=\"Movie name\"\r\n                name=\"movie\"\r\n                error={movieExist}\r\n                helperText={helperTextMovie}\r\n                value={movie}\r\n                onChange={(e) => setMovie(e.target.value)}\r\n                variant=\"outlined\"/>\r\n            <TextField\r\n                className=\"text-field\"\r\n                label=\"Year\"\r\n                name=\"year\"\r\n                value={year}\r\n                onChange={(e) => setYear(e.target.value)}/>\r\n            <TextField\r\n                className=\"text-field\"\r\n                label=\"Actors\"\r\n                name=\"actors\"\r\n                value={actors}\r\n                onChange={(e) => setActors(e.target.value)}\r\n                variant=\"outlined\"/>\r\n            <Select\r\n                value={format}\r\n                label=\"Format\"\r\n                name=\"format\"\r\n                data={[\r\n                {\r\n                    title: \"VHS\",\r\n                    value: \"VHS\"\r\n                }, {\r\n                    title: \"DVD\",\r\n                    value: \"DVD\"\r\n                }, {\r\n                    title: \"Blu-Ray\",\r\n                    value: \"Blu-Ray\"\r\n                }\r\n            ]}\r\n                onChange={(e) => setFormat(e.target.value)}/>\r\n            <div className=\"btn-conrtols\">\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                    setMovieBar(false)\r\n                }}>Cancel</ Button>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={addNewMovie}>Confirm</ Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {movies: state.movies}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addMovie\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMovieBar)","import {\r\n    ADD_MOVIE,\r\n    DELETE_MOVIE,\r\n    LOAD_MOVIES,\r\n    SEARCH_BY_ACTORS,\r\n    SEARCH_BY_MOVIE,\r\n    SORT_MOVIES,\r\n    TOGGLE_SPINNER\r\n} from \"./types\";\r\nimport axios from \"axios\"\r\n\r\nexport function loadMovies() {\r\n    return(dispatch) => {\r\n        axios\r\n            .get(\"https://eugenere95.github.io/films_list_app/movies.json\")\r\n            .then(res => {\r\n                dispatch({type: TOGGLE_SPINNER, payload: false})\r\n                dispatch({type: LOAD_MOVIES, payload: res.data})\r\n            })\r\n            .catch((e) => {\r\n                dispatch({type: TOGGLE_SPINNER, payload: false})\r\n                console.log(e)\r\n            })\r\n    }\r\n}\r\n\r\nexport function addMovie(payload) {\r\n    return {type: ADD_MOVIE, payload}\r\n}\r\n\r\nexport function deleteMovie(payload) {\r\n    return {type: DELETE_MOVIE, payload}\r\n}\r\n\r\nexport function sortMovies() {\r\n    return {type: SORT_MOVIES}\r\n}\r\n\r\nexport function filterByMovie(payload) {\r\n    return {type: SEARCH_BY_MOVIE, payload}\r\n}\r\nexport function filterByActors(payload) {\r\n    return {type: SEARCH_BY_ACTORS, payload}\r\n}\r\n\r\nexport function toggleCicularProg(payload){\r\n    return {type: TOGGLE_SPINNER, payload}\r\n}","import React, {useState} from 'react'\r\nimport TextField from '../common/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SortByAlphaIcon from '@material-ui/icons/SortByAlpha';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport {filterByActors, filterByMovie, sortMovies} from '../redux/actions';\r\nimport {connect} from 'react-redux';\r\nimport AddMovieBar from './AddMovieBar';\r\n\r\nfunction Header({filterByActors, filterByMovie, actorsFilter, moviesFilter, sortMovies}) {\r\n    const [movieBar,\r\n        setMovieBar] = useState(false)\r\n\r\n    return (\r\n        <header>\r\n            <TextField\r\n                className=\"text-field\"\r\n                label=\"Actor\"\r\n                value={actorsFilter}\r\n                InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\"><SearchIcon color=\"disabled\"/></InputAdornment>\r\n            }}\r\n                onChange={(e) => {\r\n                filterByActors(e.target.value)\r\n            }}/>\r\n            <TextField\r\n                className=\"text-field\"\r\n                label=\"Movie\"\r\n                value={moviesFilter}\r\n                InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\"><SearchIcon color=\"disabled\"/></InputAdornment>\r\n            }}\r\n                onChange={(e) => {\r\n                filterByMovie(e.target.value)\r\n            }}/>\r\n            <IconButton\r\n                aria-label=\"Sort\"\r\n                title=\"Sort by Alphabet\"\r\n                onClick={() => {\r\n                sortMovies()\r\n            }}>\r\n                <SortByAlphaIcon color=\"primary\"/>\r\n            </IconButton>\r\n            <IconButton\r\n                aria-label=\"Add-movie\"\r\n                title=\"Add Movie\"\r\n                onClick={() => {\r\n                setMovieBar(true)\r\n            }}>\r\n                <AddCircleIcon color=\"primary\" fontSize=\"large\"/>\r\n            </IconButton>\r\n            <AddMovieBar movieBar={movieBar} setMovieBar={setMovieBar}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst mapDispatch = {\r\n    filterByMovie,\r\n    filterByActors,\r\n    sortMovies\r\n}\r\n\r\nconst mapState = state => {\r\n    return {actorsFilter: state.filterByActors, moviesFilter: state.filterByMovies}\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(Header)\r\n","import React, {useState} from 'react'\r\nimport ArrowDropDownCircleIcon from '@material-ui/icons/ArrowDropDownCircle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {connect} from \"react-redux\"\r\nimport {deleteMovie} from \"../redux/actions\"\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  margin: {\r\n    margin: \"0px\"\r\n  }\r\n}));\r\n\r\nfunction MovieItem({title, format, release_date, stars, deleteMovie}) {\r\n  const classes = useStyles();\r\n\r\n  const [info, setInfo] = useState(false)\r\n\r\n  return (\r\n    <div className=\"movie-item\">\r\n      <div className=\"heading\">\r\n        <h3>{title}</h3>\r\n        <div className=\"btn\">\r\n          <IconButton\r\n            aria-label=\"dropdown\"\r\n            className={classes.margin}\r\n            title=\"Movie details\"\r\n            onClick={() => {\r\n            setInfo(!info)\r\n          }}>\r\n            <ArrowDropDownCircleIcon\r\n              color=\"primary\"\r\n              className={\"dropdown-btn \" + (info\r\n              ? \"active\"\r\n              : \"\")}/>\r\n          </IconButton>\r\n          <IconButton\r\n            aria-label=\"delete\"\r\n            title=\"Delete movie\"\r\n            className={classes.margin}\r\n            onClick={() => {\r\n            deleteMovie(title)\r\n          }}>\r\n            <DeleteIcon color=\"secondary\"/>\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className={\"movie-item_info \" + (info\r\n        ? \"active\"\r\n        : \"\")}>\r\n        <p>\r\n          <strong>Format:</strong>\r\n          {format}</p>\r\n        <p>\r\n          <strong>Release date:</strong>\r\n          {release_date}</p>\r\n        <p>\r\n          <strong>Stars:</strong>\r\n          {stars}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatch = {\r\n  deleteMovie\r\n}\r\n\r\nexport default connect(null, mapDispatch)(MovieItem)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport MovieItem from './MovieItem'\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nfunction MovieList({movies}) {\r\n    return (\r\n        <section id=\"movies-list\">\r\n            {movies.map(item => <MovieItem\r\n                key={uuidv4()}\r\n                title={item.title}\r\n                format={item.format}\r\n                release_date={item.release_date}\r\n                stars={item.stars}/>)\r\n}\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapState = state => {\r\n    return {\r\n        movies: state\r\n            .movies\r\n            .filter(item => item.title.toLowerCase().indexOf(state.filterByMovie.toLowerCase()) !== -1)\r\n            .filter(item => item.stars.toLowerCase().indexOf(state.filterByActors.toLowerCase()) !== -1)\r\n    }\r\n}\r\n\r\nexport default connect(mapState, null)(MovieList)\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {loadMovies} from '../redux/actions'\r\nimport Header from './Header'\r\nimport MovieList from './MovieList'\r\nimport { LinearProgress } from '@material-ui/core'\r\n\r\nfunction MainPage({loadMovies, spinner}) {\r\n    useEffect(() => {\r\n        loadMovies()\r\n    }, [])\r\n    return (\r\n        <section id=\"main-page\">\r\n            <Header/> {spinner\r\n                ? <LinearProgress id=\"linear-progress\"/>\r\n                : <MovieList/>}\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapDispatch = {\r\n    loadMovies\r\n}\r\n\r\nconst mapState = state => {\r\n    return {spinner: state.spinner}\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(MainPage)\r\n","import './App.scss';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\nimport MainPage from './components/MainPage';\n\nfunction App() {\n  return (\n    <Router basename=\"/films_list_app\">\n      <Route exact path=\"/\" component={MainPage}/>\n    </Router>\n  );\n}\n\nexport default App;\n","import {\r\n    ADD_MOVIE,\r\n    DELETE_MOVIE,\r\n    LOAD_MOVIES,\r\n    SEARCH_BY_ACTORS,\r\n    SEARCH_BY_MOVIE,\r\n    SORT_MOVIES,\r\n    TOGGLE_SPINNER\r\n} from \"./types\";\r\n\r\n\r\nconst initialState = {\r\n    movies: [],\r\n    filterByActors: \"\",\r\n    filterByMovie: \"\",\r\n    spinner: true\r\n}\r\n\r\nexport default function rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_MOVIE:\r\n            return {\r\n                ...state,\r\n                movies: [action.payload].concat(state.movies)\r\n            };\r\n\r\n        case DELETE_MOVIE:\r\n            return {\r\n                ...state,\r\n                movies: state\r\n                    .movies\r\n                    .filter(item => item.title !== action.payload)\r\n            };\r\n\r\n        case SEARCH_BY_ACTORS:\r\n            return {\r\n                ...state,\r\n                filterByActors: action.payload\r\n            }\r\n\r\n        case SEARCH_BY_MOVIE:\r\n            return {\r\n                ...state,\r\n                filterByMovie: action.payload\r\n            }\r\n\r\n        case SORT_MOVIES:\r\n            return {\r\n                ...state,\r\n                movies: state\r\n                    .movies\r\n                    .sort((a, b) => a.title < b.title\r\n                        ? -1\r\n                        : 1)\r\n            }\r\n\r\n        case LOAD_MOVIES:\r\n            return {\r\n                ...state,\r\n                movies: action.payload\r\n            }\r\n        case TOGGLE_SPINNER:\r\n            return {\r\n                ...state,\r\n                spinner: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from \"react-redux\"\nimport rootReducer from './redux/rootReducer';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from \"redux-thunk\"\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}